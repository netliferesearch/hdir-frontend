body {
  margin: 0;
}

.l-container {
  @include mq($until: desktop) {
    padding: 0 $container-small;
  }
  @include mq($from: desktop) {
    padding: 0 $container-medium;
  }
  @include mq($from: wide) {
    padding: 0 $container-large;
  }
}

.l-content {
  display: flex;
}

.l-sidebar {
  width: 100%;
  max-width: 350px;
}

.l-article {
  flex-grow: 1;
  @include mq($until: desktop) {
    padding: $space-sm 0 $space-sm 0;
  }
  @include mq($from: desktop) {
    padding: $space-sm $space-xs $space-sm $space-xl;
  }
  @include mq($from: wide) {
    padding: $space-sm $space-xs $space-sm $space-xl;
  }
}

.l-flex {
  @include mq($from: tablet) {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
  }
}

.l-mr-1 {
  padding-right: .5em;
  @include mq($from: desktop) {
    padding-right: 1em;
  }
  @include mq($from: wide) {
    padding-right: 1.5em;
  }
}

.l-card-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  & > * {
    margin-right: 1.25%;
    // Default is 1/3
    flex-basis: 32.5%;
    &:nth-child(3n) {
      margin-right: 0;
    }

    // ~50% until large monitor
    @include mq($until: wide) {
      flex-basis: 49.5%;
      &:nth-child(2n) {
        margin-right: 0;
      }
      &,
      &:nth-child(3n) {
        margin-right: 1%;
      }
    }
    // Two items is ~50%
    &:first-child:nth-last-child(2),
    &:first-child:nth-last-child(2) ~ * {
      flex-basis: 49.5%;
      &:nth-child(2n) {
        margin-right: 0;
      }
      &,
      &:nth-child(3n) {
        margin-right: 1%;
      }
    }
    // Four items is ~50%
    &:first-child:nth-last-child(4),
    &:first-child:nth-last-child(4) ~ * {
      flex-basis: 49.5%;
      &:nth-child(2n) {
        margin-right: 0;
      }
      &,
      &:nth-child(3n) {
        margin-right: 1%;
      }
    }
    // Only child is max ~50% width
    &:only-child {
      flex-basis: 49.5%;
    }
    // Mobile is always 100%
    @include mq($until: tablet) {
      flex-basis: 100% !important;
      margin-right: 0;
    }
  }
}

// Units for vertical spacing
// We take 10% of the viewport (window size) width and divide it.
$space-map: (
  xs: calc((5vw + 5vh) / 7.5),
  sm: calc((5vw + 5vh) / 3.3),
  md: calc((5vw + 5vh) / 2),
  lg: calc((5vw + 5vh) / 1.4),
  xl: calc((5vw + 5vh) / 1)
);

$space-directions: (
  top: t,
  right: r,
  bottom: b,
  left: l
);

// Genereates spacing classes like this: l-mt-1
// mt = margin-top, and the number represents a value from 1-5,
// where 5 has the largest distance.
.l {
  @each $direction, $shortDirection in $space-directions {
    @each $spaceName, $spaceValue in $space-map {
      &-m#{$shortDirection}-#{index($space-map, $spaceName $spaceValue)} {
        margin-#{$direction}: $spaceValue;

        @include mq($until: tablet) {
          margin-#{$direction}: calc(#{$spaceValue} * 1.2);
        }
      }
    }
  }

  // flexboxgrid-breakpoints is in settings.scss
  @each $name, $value in $flexboxgrid-breakpoints {
    &-hide-to-#{$name} {
      @include mq($until: $value) {
        display: none;
      }
    }
    &-hide-from-#{$name} {
      @include mq($from: $value) {
        display: none;
      }
    }
  }

  // rip all margins
  &-m-0 {
    margin: 0;
  }
}

.l-inline-space {
  margin-left: 1em;

  &--right {
    margin-right: 1em;
  }
}

.l {
  // Makes columns ignore the gutters
  &-bleed-right {
    @include mq($from: mobile) {
      padding-right: 0;
    }
    @include mq($from: tablet) {
      padding-right: 0;
    }
    @include mq($from: desktop) {
      padding-right: 0;
    }
    @include mq($from: wide) {
      padding-right: 0;
    }
  }
  &-bleed-left {
    @include mq($from: mobile) {
      padding-left: 0;
    }
    @include mq($from: tablet) {
      padding-left: 0;
    }
    @include mq($from: desktop) {
      padding-left: 0;
    }
    @include mq($from: wide) {
      padding-left: 0;
    }
  }
  &-bleed {
    @include mq($from: mobile) {
      padding-right: 0;
      padding-left: 0;
    }
    @include mq($from: tablet) {
      padding-right: 0;
      padding-left: 0;
    }
    @include mq($from: desktop) {
      padding-right: 0;
      padding-left: 0;
    }
    @include mq($from: wide) {
      padding-right: 0;
      padding-left: 0;
    }
  }
}

image {
  max-width: 100%;
}
